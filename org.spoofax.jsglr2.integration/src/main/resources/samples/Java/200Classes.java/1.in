class Main
{
	public static void main(String[] id)
	{
		System.out.println(new Foo().derp(42,100));
	}
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a*2; b = 2; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a*2; b = 2; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = false; // Change here 1
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+42; } // Change here 2
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}

class Foo {
  boolean foo; int bar;
  public int derp(int x, int y)
  {
    int a; boolean b; int[] c;
    a = x; b = true; c = new int[y];
    foo = true;
    if (b) { a=a-1; } else { a=a+1; }
    while (b) {
      a = a - 1;
      c[a] = a * (1+1);
      if (a<21 &&!!this.getFoo()) { foo = false; } else {
      	derp = true;
      }
    }
    return a + c.length+ c[ 0 ];
  }
  public boolean getFoo() { return foo; }
}
